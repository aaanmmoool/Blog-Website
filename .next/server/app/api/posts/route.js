"use strict";(()=>{var e={};e.id=990,e.ids=[990],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},41059:(e,t,o)=>{o.r(t),o.d(t,{headerHooks:()=>h,originalPathname:()=>v,patchFetch:()=>b,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>f});var n={};o.r(n),o.d(n,{GET:()=>u});var r=o(95419),s=o(69108),a=o(99678),i=o(78070),c=o(22345),l=o(47204);async function u(e){try{console.log("Connecting to database..."),await (0,c.Z)(),console.log("Database connected successfully"),console.log("Fetching posts...");let e=await l.Z.find({}).select("title slug createdAt updatedAt").sort({createdAt:-1});return console.log(`Found ${e.length} posts`),i.Z.json({success:!0,posts:e.map(e=>({id:e._id,title:e.title,slug:e.slug,createdAt:e.createdAt,updatedAt:e.updatedAt}))})}catch(e){return console.error("Error fetching posts:",e),i.Z.json({error:"Failed to fetch posts",details:e instanceof Error?e.message:"Unknown error",stack:e instanceof Error?e.stack:void 0},{status:500})}}let d=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/posts/route",pathname:"/api/posts",filename:"route",bundlePath:"app/api/posts/route"},resolvedPagePath:"C:\\Users\\Asus\\Desktop\\Blog Website\\app\\api\\posts\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:m,headerHooks:h,staticGenerationBailout:f}=d,v="/api/posts/route";function b(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},22345:(e,t,o)=>{o.d(t,{Z:()=>i});var n=o(11185),r=o.n(n);let s=process.env.MONGODB_URI;if(!s)throw Error("Please define the MONGODB_URI environment variable inside .env.local");console.log("MongoDB URI found:",s?"Yes":"No");let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let i=async function(){if(a.conn)return console.log("Using cached database connection"),a.conn;a.promise||(console.log("Creating new database connection..."),a.promise=r().connect(s,{bufferCommands:!1}).then(e=>(console.log("Database connected successfully"),e)).catch(e=>{throw console.error("Database connection failed:",e),e}));try{a.conn=await a.promise}catch(e){throw a.promise=null,console.error("Error in dbConnect:",e),e}return a.conn}},47204:(e,t,o)=>{o.d(t,{Z:()=>a});var n=o(11185),r=o.n(n);let s=new(r()).Schema({title:{type:String,required:!0,trim:!0,maxlength:200},content:{type:String,required:!0},slug:{type:String,required:!0,unique:!0,lowercase:!0,trim:!0}},{timestamps:!0}),a=r().models.Post||r().model("Post",s)}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),n=t.X(0,[638,206],()=>o(41059));module.exports=n})();