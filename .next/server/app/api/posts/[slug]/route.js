"use strict";(()=>{var e={};e.id=991,e.ids=[991],e.modules={98860:e=>{e.exports=require("jsdom")},11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6547:(e,t,o)=>{o.r(t),o.d(t,{headerHooks:()=>A,originalPathname:()=>P,patchFetch:()=>b,requestAsyncStorage:()=>Z,routeModule:()=>w,serverHooks:()=>v,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>j});var r={};o.r(r),o.d(r,{DELETE:()=>h,GET:()=>f,PUT:()=>m});var n=o(95419),s=o(69108),a=o(99678),i=o(78070),u=o(22345),l=o(47204),c=o(3555),d=o.n(c),p=o(87709),g=o.n(p);async function f(e,{params:t}){try{await (0,u.Z)();let{slug:e}=t,o=await l.Z.findOne({slug:e});if(!o)return i.Z.json({error:"Post not found"},{status:404});return i.Z.json({success:!0,post:{id:o._id,title:o.title,content:o.content,slug:o.slug,createdAt:o.createdAt,updatedAt:o.updatedAt}})}catch(e){return console.error("Error fetching post:",e),i.Z.json({error:"Failed to fetch post"},{status:500})}}async function m(e,{params:t}){try{await (0,u.Z)();let{slug:o}=t,{title:r,content:n}=await e.json();if(!r||!n)return i.Z.json({error:"Title and content are required"},{status:400});let s=await l.Z.findOne({slug:o});if(!s)return i.Z.json({error:"Post not found"},{status:404});let a=o;if(r!==s.title){a=d()(r,{lower:!0,strict:!0,remove:/[*+~.()'"!:@]/g});let e=await l.Z.findOne({slug:a}),t=1;for(;e&&e._id.toString()!==s._id.toString();)a=`${d()(r,{lower:!0,strict:!0})}-${t}`,e=await l.Z.findOne({slug:a}),t++}let c=g().sanitize(n),p=await l.Z.findByIdAndUpdate(s._id,{title:r.trim(),content:c,slug:a},{new:!0});return i.Z.json({success:!0,post:{id:p._id,title:p.title,content:p.content,slug:p.slug,createdAt:p.createdAt,updatedAt:p.updatedAt}})}catch(e){return console.error("Error updating post:",e),i.Z.json({error:"Failed to update post"},{status:500})}}async function h(e,{params:t}){try{await (0,u.Z)();let{slug:e}=t,o=await l.Z.findOne({slug:e});if(!o)return i.Z.json({error:"Post not found"},{status:404});return await l.Z.findByIdAndDelete(o._id),i.Z.json({success:!0,message:"Post deleted successfully"})}catch(e){return console.error("Error deleting post:",e),i.Z.json({error:"Failed to delete post"},{status:500})}}let w=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/posts/[slug]/route",pathname:"/api/posts/[slug]",filename:"route",bundlePath:"app/api/posts/[slug]/route"},resolvedPagePath:"C:\\Users\\Asus\\Desktop\\Blog Website\\app\\api\\posts\\[slug]\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:Z,staticGenerationAsyncStorage:y,serverHooks:v,headerHooks:A,staticGenerationBailout:j}=w,P="/api/posts/[slug]/route";function b(){return(0,a.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:y})}},22345:(e,t,o)=>{o.d(t,{Z:()=>i});var r=o(11185),n=o.n(r);let s=process.env.MONGODB_URI;if(!s)throw Error("Please define the MONGODB_URI environment variable inside .env.local");console.log("MongoDB URI found:",s?"Yes":"No");let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let i=async function(){if(a.conn)return console.log("Using cached database connection"),a.conn;a.promise||(console.log("Creating new database connection..."),a.promise=n().connect(s,{bufferCommands:!1}).then(e=>(console.log("Database connected successfully"),e)).catch(e=>{throw console.error("Database connection failed:",e),e}));try{a.conn=await a.promise}catch(e){throw a.promise=null,console.error("Error in dbConnect:",e),e}return a.conn}},47204:(e,t,o)=>{o.d(t,{Z:()=>a});var r=o(11185),n=o.n(r);let s=new(n()).Schema({title:{type:String,required:!0,trim:!0,maxlength:200},content:{type:String,required:!0},slug:{type:String,required:!0,unique:!0,lowercase:!0,trim:!0}},{timestamps:!0}),a=n().models.Post||n().model("Post",s)}};var t=require("../../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),r=t.X(0,[638,206,718],()=>o(6547));module.exports=r})();